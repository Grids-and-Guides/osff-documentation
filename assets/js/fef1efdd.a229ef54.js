"use strict";(self.webpackChunkosff_doc=self.webpackChunkosff_doc||[]).push([[382],{5995:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/osff-documentation/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/osff-documentation/docs/getting started","docId":"getting started","unlisted":false},{"type":"link","label":"Folder Structure","href":"/osff-documentation/docs/folder structure","docId":"folder structure","unlisted":false},{"type":"link","label":"Add New Function","href":"/osff-documentation/docs/add function","docId":"add function","unlisted":false},{"type":"link","label":"Deployment","href":"/osff-documentation/docs/deployment","docId":"deployment","unlisted":false},{"type":"link","label":"Authorizer","href":"/osff-documentation/docs/authorizer","docId":"authorizer","unlisted":false},{"type":"link","label":"cors","href":"/osff-documentation/docs/cors","docId":"cors","unlisted":false},{"type":"link","label":"To-DO","href":"/osff-documentation/docs/to-do","docId":"to-do","unlisted":false}]},"docs":{"add function":{"id":"add function","title":"Add New Function","description":"This guide walks you through the steps to add a new serverless function to your project. For demonstration, we\u2019ll build a simple getUser API.","sidebar":"tutorialSidebar"},"authorizer":{"id":"authorizer","title":"Authorizer","description":"This guide will walk you through the process of integrating a custom authorizer into your serverless function. For demonstration purposes, we\u2019ll create a simple custom-auth authorizer and attach it to the getUser API endpoint.","sidebar":"tutorialSidebar"},"cors":{"id":"cors","title":"cors","description":"","sidebar":"tutorialSidebar"},"deployment":{"id":"deployment","title":"Deployment","description":"To deploy your application, ensure that the AWS CDK and AWS CLI are properly configured in your environment.","sidebar":"tutorialSidebar"},"folder structure":{"id":"folder structure","title":"Folder Structure","description":"","sidebar":"tutorialSidebar"},"getting started":{"id":"getting started","title":"Getting Started","description":"Welcome to Dual Serve \u2013 a lightweight, modular framework for building, organizing, and deploying AWS Lambda functions using TypeScript and CDK.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Overview","description":"Dual Serve is a minimalistic, developer-friendly TypeScript framework designed to simplify the creation, testing, and deployment of AWS Lambda functions.","sidebar":"tutorialSidebar"},"to-do":{"id":"to-do","title":"To-DO","description":"- Local Authorizer wrapper (cognito and custom)","sidebar":"tutorialSidebar"}}}}')}}]);