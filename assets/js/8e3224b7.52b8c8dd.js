"use strict";(self.webpackChunkosff_doc=self.webpackChunkosff_doc||[]).push([[918],{6600:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"add function","title":"Add New Function","description":"This guide walks you through the steps to add a new serverless function to your project. For demonstration, we\u2019ll build a simple getUser API.","source":"@site/docs/add function.md","sourceDirName":".","slug":"/add function","permalink":"/osff-documentation/docs/add function","draft":false,"unlisted":false,"editUrl":"https://github.com/Grids-and-Guides/osff-documentation/docs/add function.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Folder Structure","permalink":"/osff-documentation/docs/folder structure"},"next":{"title":"Deployment","permalink":"/osff-documentation/docs/deployment"}}');var r=t(4848),i=t(8453);const o={sidebar_position:4},c="Add New Function",a={},l=[{value:"step 1",id:"step-1",level:4},{value:"step 2",id:"step-2",level:4},{value:"step 3",id:"step-3",level:4},{value:"step 4",id:"step-4",level:4},{value:"step 5",id:"step-5",level:4},{value:"step 6",id:"step-6",level:4}];function d(e){const n={code:"code",h1:"h1",h4:"h4",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"add-new-function",children:"Add New Function"})}),"\n",(0,r.jsxs)(n.p,{children:["This guide walks you through the steps to add a new serverless function to your project. For demonstration, we\u2019ll build a simple ",(0,r.jsx)(n.code,{children:"getUser"})," API."]}),"\n",(0,r.jsx)(n.h4,{id:"step-1",children:"step 1"}),"\n",(0,r.jsx)(n.p,{children:"Create Required Files and Folders"}),"\n",(0,r.jsxs)(n.p,{children:["Create the following folder structure inside the ",(0,r.jsx)(n.code,{children:"src"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 lambda-handler\n        \u2514\u2500\u2500 http\n            \u2514\u2500\u2500 user    // module name\n                \u251c\u2500\u2500 get-user.ts     // lambda handler\n                \u2514\u2500\u2500 user.config.ts // Use this file to register all functions\n    \u2514\u2500\u2500 services \n        \u2514\u2500\u2500 user\n            \u251c\u2500\u2500 list-user-service.ts // Business logic\n            \u2514\u2500\u2500 user-types.ts   // Type definitions\n"})}),"\n",(0,r.jsx)(n.h4,{id:"step-2",children:"step 2"}),"\n",(0,r.jsx)(n.p,{children:"Implement the Service Logic"}),"\n",(0,r.jsx)(n.p,{children:"Create the service file to handle your business logic. In this example, we\u2019re returning a mock list of users:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'// src/services/user/list-user-service.ts\n\nexport function userList(){\n    return [\n        { name: "user 1", email: "user1@mail.com" },\n        { name: "user 2", email: "user2@mail.com" }\n    ];\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"step-3",children:"step 3"}),"\n",(0,r.jsx)(n.p,{children:"Create a handler that invokes the service and returns the result:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// src/lambda-handler/http/user-get\n\nimport { Handler } from 'aws-lambda';\nimport { userList } from '../../../services/user/list-user-service';\n\n\nexport const handler: Handler = async (event, context) => {\n    const list = userList();\n    return { statusCode: 200, body: list};\n};\n\n"})}),"\n",(0,r.jsx)(n.h4,{id:"step-4",children:"step 4"}),"\n",(0,r.jsx)(n.p,{children:"Define configuration settings like trigger type, runtime, environment variables, and more in user.config.ts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'// src/lambda-handler/http/user.config.ts\n\nimport { FunctionConfig, Trigger } from \'osff-dsl\';\nimport path from \'path\';\n\nconst getUserTrigger = new Trigger(\n    "http",             // trigger type http ot websocket \n    "getUser",          // api endpoint\n    "GET",              // API method\n    "application/json", // response content type\n    "my-serverless-app-${self.stage}",  // API gateway name\n  );\n  \nexport const getUserFunction = new FunctionConfig(\n    "getUser-${self.stage}",    // function name\n    "lambda.Runtime.NODEJS_22_X",   // runtime\n    "index.handler",    // lambda handler\n    path.resolve(process.cwd(),"src/lambda-handler/http/getUser/getUser.ts"),   // source file\n    path.resolve(process.cwd(), "dist/lambda-handler/http/getUser/getUser.js"), // compile file\n    256,    // memory\n    10,     // concurrency\n    30,     // timeout\n    {       // environment variables \n      "MONGODB_URI": "localhost:db",\n      "frontendUrl": "${env.frontendUrl}",\n      "functionName": "${currentFunction.name}",\n      "cors": "${env.cors}"\n    },\n    [getUserTrigger]    // triggers. you can add multiple triggers like http, S3, Cloud watch event\n  );\n'})}),"\n",(0,r.jsx)(n.h4,{id:"step-5",children:"step 5"}),"\n",(0,r.jsx)(n.p,{children:"Register the Function in App Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Include the new function in your application stack:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'// bin/app-config.ts\n\n...\nimport { getUserFunction } from "../src/lambda-handler/http/user/user.config";\n\nexport const appStack = new AppStack(\n    ...\n    [..., getUserFunction]\n  );\n'})}),"\n",(0,r.jsx)(n.h4,{id:"step-6",children:"step 6"}),"\n",(0,r.jsx)(n.p,{children:"You can now start the application locally:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm run start --stage local --port 3000\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);