"use strict";(self.webpackChunkosff_doc=self.webpackChunkosff_doc||[]).push([[976],{2053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"intro","title":"Overview","description":"Dual Serve is a minimalistic, developer-friendly TypeScript framework designed to simplify the creation, testing, and deployment of AWS Lambda functions.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/osff-documentation/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/Grids-and-Guides/osff-documentation/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview"},"sidebar":"tutorialSidebar","next":{"title":"Getting Started","permalink":"/osff-documentation/docs/getting started"}}');var r=t(4848),s=t(8453);const d={sidebar_position:1,title:"Overview"},l="Overview",o={},c=[{value:"Dual Serve vs AWS SAM",id:"dual-serve-vs-aws-sam",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)(n.p,{children:"Dual Serve is a minimalistic, developer-friendly TypeScript framework designed to simplify the creation, testing, and deployment of AWS Lambda functions."}),"\n",(0,r.jsx)(n.p,{children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Local Development & Runtime"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Dual Serve includes a built-in run mode, allowing you to test Lambda functions locally without any Docker dependency."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Multi-Stage Support"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Easily manage multiple environments such as local, dev, and production with clear and simple configuration."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Powered by AWS CDK"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Leverages the official AWS Cloud Development Kit (CDK) under the hood, while providing a streamlined and minimal configuration layer on top of it."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lightning Fast Build"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All Lambda functions are compiled, minified, and bundled into a single file output at build time. This significantly reduces the deployment size\u2014typically just a few hundred KBs\u2014leading to faster cold starts."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"100% TypeScript Support"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"From infrastructure to application code, everything is written and managed in TypeScript, enabling better type safety and developer experience."}),"\n",(0,r.jsx)(n.h2,{id:"dual-serve-vs-aws-sam",children:"Dual Serve vs AWS SAM"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Dual Serve"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"AWS SAM"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Language Support"})}),(0,r.jsx)(n.td,{children:"Full TypeScript (infra + code)"}),(0,r.jsx)(n.td,{children:"YAML for infra, runtime support for various langs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Build System"})}),(0,r.jsx)(n.td,{children:"Bundled + minified single output"}),(0,r.jsx)(n.td,{children:"Docker-based builds for some runtimes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Docker Dependency"})}),(0,r.jsx)(n.td,{children:"Not required"}),(0,r.jsx)(n.td,{children:"Required for local testing/build"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Cold Start Optimization"})}),(0,r.jsx)(n.td,{children:"Single small file per function (~KBs)"}),(0,r.jsx)(n.td,{children:"Often larger artifacts"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Infrastructure as Code"})}),(0,r.jsx)(n.td,{children:"Simplified CDK abstraction (TS-based)"}),(0,r.jsx)(n.td,{children:"SAM template in YAML"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Local Development"})}),(0,r.jsxs)(n.td,{children:["Built-in ",(0,r.jsx)(n.code,{children:"run"})," command (no Docker)"]}),(0,r.jsx)(n.td,{children:"Uses Docker to emulate AWS Lambda"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Multi-Stage Deployment"})}),(0,r.jsxs)(n.td,{children:["Native support (",(0,r.jsx)(n.code,{children:"local"}),", ",(0,r.jsx)(n.code,{children:"dev"}),", ",(0,r.jsx)(n.code,{children:"prod"}),")"]}),(0,r.jsx)(n.td,{children:"Manual or CI/CD-based stage handling"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Learning Curve"})}),(0,r.jsx)(n.td,{children:"Easy for TypeScript/Node.js developers"}),(0,r.jsx)(n.td,{children:"Requires learning SAM CLI and YAML format"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Deployment Speed"})}),(0,r.jsx)(n.td,{children:"Fast (minimal CDK wrapper)"}),(0,r.jsx)(n.td,{children:"Slower due to Docker and large templates"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);